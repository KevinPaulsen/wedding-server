buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.9.0'
    }
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.paulsen'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "mysql:mysql-connector-java:8.0.33"

    // Add H2 dependency for development profile
    runtimeOnly 'com.h2database:h2:2.3.232'
}

tasks.named('test') {
	useJUnitPlatform()
}

war {
    archiveFileName = 'wedding-app.war'
}

apply plugin: 'com.bmuschko.cargo'

cargo {
    containerId = 'tomcat10x' // Adjust to your Tomcat version
    port = 8080 // Default Tomcat port

    remote {
        hostname = '52.12.29.118' // EC2 instance public IP
        username = project.findProperty('cargo.username') ?: 'deployer'
        password = project.findProperty('cargo.password') ?: 'password'
    }

    deployable {
        file = file('build/libs/wedding-app.war') // Path to your WAR file
        context = '/' // Context path for the app
    }

    // Set system property to activate Spring profile
    local {
        systemProperties {
            property 'spring.profiles.active', 'prod'
            property 'spring.datasource.password', project.findProperty('cargo.password') ?: ''
        }
    }
}

cargoDeployRemote.dependsOn assemble
